name: DevContainer CI/CD

on:
  push:
    branches:
      - main
      - master
    paths:
      - '.devcontainer/**'
      - '.github/workflows/devcontainer-ci.yml'
  pull_request:
    branches:
      - main
      - master
    paths:
      - '.devcontainer/**'
      - '.github/workflows/devcontainer-ci.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-devcontainer

jobs:
  test-devcontainer:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Test devcontainer
      uses: devcontainers/ci@v0.3
      with:
        configFile: ./.devcontainer/devcontainer.json
        push: never
        runCmd: |
          # Test that all expected tools are available
          python --version
          uv --version
          node --version
          npm --version
          supabase --version
          
          # Test that the project can be set up
          make ci-install
          make ci-lint
          make ci-test

  build-and-push:
    runs-on: ubuntu-latest
    needs: test-devcontainer
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build devcontainer
      uses: devcontainers/ci@v0.3
      with:
        configFile: ./.devcontainer/devcontainer.json
        imageName: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        imageTag: ${{ steps.meta.outputs.version }}
        push: always
        additionalImageTags: ${{ steps.meta.outputs.tags }}